package model

import (
	"context"
	"fmt"
	"time"

	"github.com/photoServer/global"
	"go.mongodb.org/mongo-driver/bson"
	"go.mongodb.org/mongo-driver/mongo/options"
)

func PhotoNext() (string, error) {
	//分页查询：
	//按照filter查询数据库，将查询结果按照 global包定义的全局变量global.PhotosPerPage
	//进行分页，返回的是第pageNumber页面中的doucment数组，这个filter的总数，这个总数
	//用于确定在templates中的pagination计算。
	var document global.Document

	col, err := connectToPic()
	if err != nil {
		fmt.Println("Error Can not connect to PIC collection")
		return "", err
	}
	ctx, cancel := context.WithTimeout(context.Background(), 10*time.Second)
	defer cancel()

	filter := bson.M{}
	var opt options.FindOptions
	cursor, err := col.Find(
		ctx,
		filter,
		opt.SetSort(bson.M{"createdate": -1}),
	)

	if err != nil {
		fmt.Println("Finding all documents ERROR:", err)
		defer cursor.Close(ctx)
		return "", err

	} else {
		if cursor.Next(ctx) {
			err := cursor.Decode(&document)
			if err != nil {
				fmt.Println("Cursor Decode error in cursor.Next()", err)
				return "", err
			}
		} else {
			fmt.Println("Not cursor.Next() exist!")
			return "", err
		}
	}

	photoBase64 := GenOriginalPicBase64(document.Path)
	return photoBase64, nil
}
